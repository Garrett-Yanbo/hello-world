plugins {
    id 'java'
    id 'com.google.protobuf' version '0.8.13'
    id 'maven-publish'
    id 'maven'
}
group 'com.tsingj'
version '1.8.4.6.13'

allprojects {
    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        maven {
            url "http://nexus.tsingj.local/repository/maven-public/"
            credentials {
                username "admin"
                password "qwer1234"
            }
        }
    }
}


jar {

//    into('lib') {
//        from configurations.runtime
//    }

    baseName 'privpysdk'
    exclude('LICENSE.txt', 'NOTICE.txt', 'rootdoc.txt')

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'

    exclude 'META-INF/NOTICE', 'META-INF/NOTICE.txt'

    exclude 'META-INF/LICENSE', 'META-INF/LICENSE.txt'

    exclude 'META-INF/DEPENDENCIES'
}

dependencies {
//    implementation 'org.jetbrains:annotations:19.0.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'io.netty', name: 'netty-codec-http', version: '4.1.44.Final'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    // https://mvnrepository.com/artifact/org.bouncycastle/bcpkix-jdk15on
    compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.61'
    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.0'
    compile (group: 'io.grpc', name: 'grpc-all', version: '1.33.1'){
        exclude group: 'io.netty'
    }
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.69'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.8.0'

    compile fileTree(dir: './', includes: ['*jar'])
    implementation fileTree(dir: './', includes: ['*jar'])
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.25.0'
        }
    }
    generatedFilesBaseDir = "src"
    generateProtoTasks {
        all()*.plugins {
            grpc {
                setOutputSubDir 'java'
            }
        }
    }
}

sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir 'src/main/java/com/tsingj/privpy/sdk/proto/compute'
            srcDir 'src/main/java/com/tsingj/privpy/sdk/proto/console'
            // In addition to the default '**/*.proto' (use with caution).
            // Using an extension other than 'proto' is NOT recommended,
            // because when proto files are published along with class files, we can
            // only tell the type of a file from its extension.
//            include '**/*.protodevel'
        }
    }
    test {
        proto {
//            include 'src/test/java/com/tsingj/privpy/sdk/test/*Test.class'
            // In addition to the default 'src/test/proto'
            srcDir 'src/test/java/protocolbuffers'
        }
    }
}



task sourceJar (type:Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

artifacts {
    archives sourceJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = 'com.tsingj'
            pom.artifactId = 'privpysdk'
            pom.version = '1.8.4.7.3aplpa1'
            repository(url: 'http://nexus.tsingj.local/repository/maven-releases/') {
                authentication(userName: 'admin', password: 'qwer1234')
            }
            snapshotRepository(url: 'http://nexus.tsingj.local/repository/maven-snapshots/') {
                authentication(userName: 'admin', password: 'qwer1234')
            }
        }
    }
}


